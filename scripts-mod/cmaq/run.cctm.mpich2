#! /bin/csh -f

#> Set the working directory:
 set BASE     = $cwd

# Ying LI: add the species defination are required for the CMAQv5.0.1
 set APPL     = V5g_ebi_cb05cl_ae5_aq
 set BLD      = ../BLD_$APPL
 set MECH     = cb05cl_ae5_aq 
#> species defn & photolysis
 setenv gc_matrix_nml ${BLD}/GC_$MECH.nml
 setenv ae_matrix_nml ${BLD}/AE_$MECH.nml
 setenv nr_matrix_nml ${BLD}/NR_$MECH.nml
 setenv tr_matrix_nml ${BLD}/Species_Table_TR_0.nml
 setenv CSQY_DATA ${BLD}/CSQY_DATA_$MECH
 if (! (-e $CSQY_DATA ) ) then
           echo " $CSQY_DATA  not found "
           exit 1
           endif
# Ying LI: add the species defination are required for the CMAQv5.0.1

#> timestep run parameters

 set CUR_JDATE   = $argv[1]        # beginning date
 set STTIME   = ${INIT_H}0000        # beginning GMT time (HHMMSS)
 set NSTEPS   = 240000        # time duration (HHMMSS) for this run
 set TSTEP    = 010000        # output time step interval (HHMMSS)

#> set log file [ default = unit 6 ]; uncomment to write standard output to a log
#setenv LOGFILE $BASE/$APPL.log

#> turn off excess WRITE3 logging
 setenv IOAPI_LOG_WRITE F

#> use Min Kz option in edyintb [Y], otherwise revert to Kz0UT
 setenv KZMIN N
 
#> aerosol diagnostic file [ N|F ]
 setenv CTM_AERDIAG F


#> stop on inconsistent input file [ T | Y | F | N ]
 setenv FL_ERR_STOP F

#> windblown dust? [ Y|N ]
 setenv CTM_WB_DUST F

#> use agricultural activity for windblown dust? [ N|F ]
#> - env var ignored if CTM_WB_DUST is N|F
 setenv CTM_ERODE_AGLAND Y

#> windblown dust emissions diagnostic file [ N|F ]
#> - env var ignored if CTM_WB_DUST is N|F
 setenv CTM_DUSTEM_DIAG Y

#> turn on lightning NOx [ N|F ]
 setenv CTM_LTNG_NO F

#> save derived vertical velocity component to conc file [ N|F ]
 setenv CTM_WVEL F

#> remove existing output files?
set DISP = delete
#set DISP = update
#set DISP = keep

#> output files and directories
 set OUTDIR   = $M3OUT
 if ( ! -d "$OUTDIR" ) mkdir -p $OUTDIR
 set CGRIDfile = ${EXEC}_${M3EXTN}."CGRID".$CUR_JDATE 
 set CONCfile  = ${EXEC}_${M3EXTN}."CONC".$CUR_JDATE                    # CTM_CONC_1
 set ACONCfile = ${EXEC}_${M3EXTN}."ACONC".${CUR_JDATE}                 # CTM_ACONC_1
 set DD1file   = ${EXEC}_${M3EXTN}."DRYDEP".$CUR_JDATE                  # CTM_DRY_DEP_1
 set WD1file   = ${EXEC}_${M3EXTN}."WETDEP1".$CUR_JDATE                 # CTM_WET_DEP_1
 set WD2file   = ${EXEC}_${M3EXTN}."WETDEP2".$CUR_JDATE                 # CTM_WET_DEP_2
 set SS1file   = ${EXEC}_${M3EXTN}."SSEMIS1".$CUR_JDATE                 # CTM_SSEMIS_1
 set AV1file   = ${EXEC}_${M3EXTN}."AEROVIS".$CUR_JDATE                 # CTM_VIS_1
 set AD1file   = ${EXEC}_${M3EXTN}."AERODIAM".$CUR_JDATE                # CTM_DIAM_1
 set PG1file   = ${EXEC}_${M3EXTN}."PING".$CUR_JDATE                    # CTM_PING_1
 set PGDfile   = ${EXEC}_${M3EXTN}."PINGDRYDEP".$CUR_JDATE              # CTM_PING_DDEP_1
 set PGWfile   = ${EXEC}_${M3EXTN}."PINGAERODIAM".$CUR_JDATE            # CTM_PING_DIAM_1
 set PA1file   = ${EXEC}_${M3EXTN}."PA_1".$CUR_JDATE                    # CTM_IPR_1
 set PA2file   = ${EXEC}_${M3EXTN}."PA_2".$CUR_JDATE                    # CTM_IPR_2
 set PA3file   = ${EXEC}_${M3EXTN}."PA_3".$CUR_JDATE                    # CTM_IPR_3
 set IRR1file  = ${EXEC}_${M3EXTN}."IRR_1".$CUR_JDATE                   # CTM_IRR_1
 set IRR2file  = ${EXEC}_${M3EXTN}."IRR_2".$CUR_JDATE                   # CTM_IRR_2
 set IRR3file  = ${EXEC}_${M3EXTN}."IRR_3".$CUR_JDATE                   # CTM_IRR_3

#> inputs


#> set ancillary log file name extensions
 setenv CTM_APPL $APPL

#> set floor file (neg concs)
 setenv FLOOR_FILE $BASE/FLOOR_${APPL}

#> set ping floor file (neg concs) [remember: env var .le. 16 chars]
 setenv PLUME_FLOOR_FILE $BASE/CPLUME_FLOOR_${APPL}

#> horizontal grid defn; check GRIDDESC file for GRID_NAME options
# setenv GRIDDESC ../GRIDDESC1
# setenv GRID_NAME M_36_2001

#> species for standard conc
#setenv CONC_SPCS "O3 NO ANO3I ANO3J NO2 FORM ISOP ANH4J ASO4I ASO4J"

#> layer range for standard conc
#setenv CONC_BLEV_ELEV " 1 4"

#> species for integral average conc
#setenv AVG_CONC_SPCS "O3 NO CO NO2 ASO4I ASO4J NH3"
setenv AVG_CONC_SPCS "ALL" 

#> layer range for integral average conc
 setenv ACONC_BLEV_ELEV " 1 1"

#> input files and directories

# set OCEANpath = $M3DATA/emis/2001
# set OCEANfile = OCEANFILE_US36_40X44

# set EMISpath  = $M3DATA/emis/2001
# set EMISfile  = emis3d.2001_ah.us36b.20010722.wndw.ncf

#set GC_ICpath = $OUTDIR
#set GC_ICfile = CCTM_e3aCGRID.d1b
# set GC_ICpath = $M3DATA/icon
# set GC_ICfile = ICON_cb05_M_36_2001_profile
 
# set GC_BCpath = $M3DATA/bcon
# set GC_BCfile = BCON_cb05_M_36_2001_profile
 
# set METpath   = $M3DATA/mcip3/M_36_2001
# set extn      = 010722
# set GC2file   = GRIDCRO2D_${extn}
# set GD2file   = GRIDDOT2D_${extn}
# set MC2file   = METCRO2D_${extn}
# set MD3file   = METDOT3D_${extn}
# set MC3file   = METCRO3D_${extn}
# set MB3file   = METBDY3D_${extn}
 
 set TR_DVpath = $METpath
 set TR_DVfile = $MC2file
 
 set AE_ICpath = $GC_ICpath
 set NR_ICpath = $GC_ICpath
 set TR_ICpath = $GC_ICpath
 set AE_ICfile = $GC_ICfile
 set NR_ICfile = $GC_ICfile
 set TR_ICfile = $GC_ICfile

 set AE_BCpath = $GC_BCpath
 set NR_BCpath = $GC_BCpath
 set TR_BCpath = $GC_BCpath
 set AE_BCfile = $GC_BCfile
 set NR_BCfile = $GC_BCfile
 set TR_BCfile = $GC_BCfile

#> input and output files and directories (boilerplate)
 source in_out.q
 if ( $status ) exit 1
 
#> for the run control ...

 setenv CTM_STDATE      $CUR_JDATE
 setenv CTM_STTIME      $STTIME
 setenv CTM_RUNLEN      $NSTEPS
 setenv CTM_TSTEP       $TSTEP
 setenv CTM_PROGNAME    $EXEC

#> look for existing log files
                              
 set test = `ls CTM_LOG_???.${APPL}`
 if ( "$test" != "" ) then
    if ( $DISP == 'delete' ) then
       echo " ancillary log files being deleted"
       foreach file ( $test )
          echo " deleting $file"
          rm $file
          end
       else
       echo "*** Logs exist - run ABORTED ***"
       exit 1
       endif
    endif

#> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 env

 ls -l $BASE/$EXEC; size $BASE/$EXEC

 if ( $USE_MPIconfigfile == 1 ) then
   echo $PATH_SYSDIR/bin/mfile2cfile nodes MPIconfigfile $BASE/$EXEC
   $PATH_SYSDIR/bin/mfile2cfile nodes MPIconfigfile $BASE/$EXEC
   echo $MPICH2BIN/mpiexec -configfile MPIconfigfile < /dev/null
   $MPICH2BIN/mpiexec -configfile MPIconfigfile < /dev/null
   exit $status
 else
   if ( $START_MPD == 0 ) then
     echo $MPICH2BIN/mpiexec -n $NPROCS $BASE/$EXEC
     $MPICH2BIN/mpiexec -n $NPROCS $BASE/$EXEC < /dev/null
     exit $status
   else
     echo $MPICH2BIN/mpiexec -machinefile nodes -np $NPROCS $BASE/$EXEC
     $MPICH2BIN/mpiexec -machinefile nodes -np $NPROCS $BASE/$EXEC < /dev/null
     exit $status
   endif
 endif
